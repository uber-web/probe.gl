"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[133],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},l=Object.keys(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),c=p(n),d=r,m=c["".concat(s,".").concat(d)]||c[d]||g[d]||l;return n?o.createElement(m,i(i({ref:t},u),{},{components:n})):o.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=d;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a[c]="string"==typeof e?e:r,i[1]=a;for(var p=2;p<l;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},569:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>g,frontMatter:()=>l,metadata:()=>a,toc:()=>p});var o=n(7462),r=(n(7294),n(3905));const l={},i="enableDOMLogging (experimental)",a={unversionedId:"modules/test-utils/log-to-dom",id:"modules/test-utils/log-to-dom",title:"enableDOMLogging (experimental)",description:"A utility that takes console output and display a copy in the dom for easy debugging. Inspired by tap-browser-color.",source:"@site/../docs/modules/test-utils/log-to-dom.md",sourceDirName:"modules/test-utils",slug:"/modules/test-utils/log-to-dom",permalink:"/probe.gl/docs/modules/test-utils/log-to-dom",draft:!1,editUrl:"https://github.com/uber-web/probe.gl/tree/master/website/../docs/modules/test-utils/log-to-dom.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"makeSpy",permalink:"/probe.gl/docs/modules/test-utils/make-spy"}},s={},p=[{value:"Usage",id:"usage",level:2},{value:"Function",id:"function",level:2},{value:"enableDOMLogging(options : Any)",id:"enabledomloggingoptions--any",level:3}],u={toc:p},c="wrapper";function g(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"enabledomlogging-experimental"},"enableDOMLogging (experimental)"),(0,r.kt)("p",null,"A utility that takes console output and display a copy in the dom for easy debugging. Inspired by ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/kirbysayshi/tap-browser-color"},"tap-browser-color"),"."),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import {_enableDOMLogging as enableDOMLogging} from '@probe.gl/test-utils';\nenableDOMLogging();\n")),(0,r.kt)("h2",{id:"function"},"Function"),(0,r.kt)("h3",{id:"enabledomloggingoptions--any"},"enableDOMLogging(options : Any)"),(0,r.kt)("p",null,"Turn DOM logging on/off."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"if ",(0,r.kt)("inlineCode",{parentName:"li"},"options")," is not provided, enable DOM logging with default options."),(0,r.kt)("li",{parentName:"ul"},"if ",(0,r.kt)("inlineCode",{parentName:"li"},"options")," is an object, enable DOM logging. The following options are available:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"container")," (DOMElement) - the container to log into. If not provided, will append a new ",(0,r.kt)("inlineCode",{parentName:"li"},"div")," to the document."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"getStyle")," (Function) - called when the log updates to get the css styles object for the container."))),(0,r.kt)("li",{parentName:"ul"},"if ",(0,r.kt)("inlineCode",{parentName:"li"},"options")," is ",(0,r.kt)("inlineCode",{parentName:"li"},"false"),", disable all DOM logging.")))}g.isMDXComponent=!0}}]);